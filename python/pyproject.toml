[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "nodemaven"
version = "1.0.0"
authors = [
    {name = "NodeMaven Team", email = "support@nodemaven.com"},
]
description = "Professional Proxy API - Residential & Mobile Proxies"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License", 
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: Proxy Servers",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]
keywords = ["proxy", "residential", "mobile", "api", "web-scraping", "geo-targeting"]
dependencies = [
    "requests>=2.25.0",
    "urllib3>=1.26.0",
    "certifi>=2020.6.20",
    "python-dotenv>=0.19.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.0",
    "black>=21.0",
    "flake8>=3.8",
    "mypy>=0.800",
    "isort>=5.0.0",
    "responses>=0.18.0",
    "httpx>=0.24.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.18.0",
]
examples = [
    "jupyter>=1.0.0",
    "requests-html>=0.10.0",
    "beautifulsoup4>=4.9.0",
    "selenium>=4.0.0",
]

[project.urls]
Homepage = "https://dashboard.nodemaven.com"
Documentation = "https://dashboard.nodemaven.com/documentation"
Repository = "https://github.com/nodemavencom/proxy"
"Bug Tracker" = "https://github.com/nodemavencom/proxy/issues"
Changelog = "https://github.com/nodemavencom/proxy/blob/main/CHANGELOG.md"
"Support" = "https://t.me/node_maven"

[project.scripts]
nodemaven-test = "nodemaven.cli:main"
nodemaven-ip = "nodemaven.cli:check_ip"
nodemaven-countries = "nodemaven.cli:list_countries"

[tool.setuptools.packages.find]
include = ["nodemaven*", "ip_checker*"]
exclude = ["tests*", "examples*", "tools*"]

[tool.setuptools.package-data]
nodemaven = ["py.typed"]
ip_checker = ["*.json"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["nodemaven", "ip_checker"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests requiring API key",
    "slow: Tests that take more than 5 seconds",
]

[tool.coverage.run]
source = ["nodemaven", "ip_checker"]
omit = ["*/tests/*", "*/venv/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
] 