name: 📦 Publish to PyPI

on:
  # Trigger on new releases
  release:
    types: [published]
  
  # Allow manual publishing
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (e.g., 1.0.1)'
        required: true
        type: string
      
      test_pypi:
        description: 'Publish to Test PyPI first?'
        required: true
        default: true
        type: boolean

jobs:
  # Pre-publish tests and validation
  pre-publish-tests:
    name: 🧪 Pre-Publish Validation
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🐍 Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: 📦 Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine check-manifest
        
    - name: 🔍 Get version from input or release
      id: get-version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
        else
          # Extract version from release tag (remove 'v' prefix if present)
          VERSION="${{ github.event.release.tag_name }}"
          VERSION="${VERSION#v}"
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
        fi
        
    - name: 📝 Update version in pyproject.toml
      run: |
        cd python
        sed -i 's/version = ".*"/version = "${{ steps.get-version.outputs.version }}"/' pyproject.toml
        echo "Updated version to ${{ steps.get-version.outputs.version }}"
        
    - name: 🧪 Run comprehensive tests
      run: |
        cd python
        pip install -e .[dev]
        
        echo "🚀 Running unit tests..."
        python -m pytest tests/test_unit.py -v --tb=short
        
        echo "✅ All tests passed!"
        
    - name: 🔧 Check package structure
      run: |
        cd python
        python -m build --wheel --sdist
        twine check dist/*
        
        echo "✅ Package structure validated!"
        
    - name: 📋 Validate manifest
      run: |
        cd python
        check-manifest --ignore-bad-ideas='*.md'
        
        echo "✅ Manifest validated!"
        
    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: python/dist/
        retention-days: 7

  # Publish to Test PyPI first
  publish-test-pypi:
    name: 🧪 Publish to Test PyPI
    runs-on: ubuntu-latest
    needs: pre-publish-tests
    if: |
      (github.event_name == 'workflow_dispatch' && github.event.inputs.test_pypi == 'true') ||
      github.event_name == 'release'
    environment:
      name: test-pypi
      url: https://test.pypi.org/p/nodemaven
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    
    steps:
    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-files
        path: dist/
        
    - name: 🧪 Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        packages-dir: dist/
        verbose: true
        
    - name: ✅ Test PyPI publication summary
      run: |
        echo "# 🧪 Test PyPI Publication Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** ${{ needs.pre-publish-tests.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**Test PyPI URL:** https://test.pypi.org/project/nodemaven/${{ needs.pre-publish-tests.outputs.version }}/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🧪 Test Installation" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "# Install from Test PyPI" >> $GITHUB_STEP_SUMMARY
        echo "pip install -i https://test.pypi.org/simple/ nodemaven==${{ needs.pre-publish-tests.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Test the installation" >> $GITHUB_STEP_SUMMARY
        echo "nodemaven-test --help" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY

  # Publish to Production PyPI
  publish-pypi:
    name: 🚀 Publish to PyPI
    runs-on: ubuntu-latest
    needs: [pre-publish-tests, publish-test-pypi]
    if: success()
    environment:
      name: pypi
      url: https://pypi.org/p/nodemaven
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    
    steps:
    - name: 📥 Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-files
        path: dist/
        
    - name: 🚀 Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        packages-dir: dist/
        verbose: true
        
    - name: 🎉 PyPI publication summary
      run: |
        echo "# 🎉 PyPI Publication Successful!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Version:** ${{ needs.pre-publish-tests.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "**PyPI URL:** https://pypi.org/project/nodemaven/${{ needs.pre-publish-tests.outputs.version }}/" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 🚀 Installation" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo '```bash' >> $GITHUB_STEP_SUMMARY
        echo "# Install the latest version" >> $GITHUB_STEP_SUMMARY
        echo "pip install nodemaven" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Install specific version" >> $GITHUB_STEP_SUMMARY
        echo "pip install nodemaven==${{ needs.pre-publish-tests.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "# Test the installation" >> $GITHUB_STEP_SUMMARY
        echo "nodemaven-test --help" >> $GITHUB_STEP_SUMMARY
        echo "nodemaven-ip" >> $GITHUB_STEP_SUMMARY
        echo "nodemaven-countries --limit 5" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "## 📚 Next Steps" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- 📖 [Documentation](https://dashboard.nodemaven.com/documentation)" >> $GITHUB_STEP_SUMMARY
        echo "- 💬 [Support](https://t.me/node_maven)" >> $GITHUB_STEP_SUMMARY
        echo "- 🐛 [Report Issues](https://github.com/nodemavencom/proxy/issues)" >> $GITHUB_STEP_SUMMARY

  # Verify publication worked
  verify-publication:
    name: ✅ Verify Publication
    runs-on: ubuntu-latest
    needs: [pre-publish-tests, publish-pypi]
    if: success()
    
    steps:
    - name: 🐍 Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        
    - name: ⏳ Wait for PyPI propagation
      run: sleep 60
      
    - name: 📦 Test installation from PyPI
      run: |
        echo "🔍 Testing installation from PyPI..."
        pip install nodemaven==${{ needs.pre-publish-tests.outputs.version }}
        
        echo "🧪 Testing CLI tools..."
        nodemaven-test --help
        nodemaven-ip --help  
        nodemaven-countries --help
        
        echo "🧪 Testing Python import..."
        python -c "
        import nodemaven
        print(f'✅ NodeMaven version: {nodemaven.__version__}')
        from nodemaven import NodeMavenClient
        print('✅ NodeMavenClient imported successfully')
        "
        
        echo "✅ All verification tests passed!"
        
    - name: 🎊 Final success summary
      run: |
        echo "# 🎊 Publication Complete & Verified!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Package published to PyPI**" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Installation verified**" >> $GITHUB_STEP_SUMMARY
        echo "✅ **CLI tools working**" >> $GITHUB_STEP_SUMMARY
        echo "✅ **Python imports working**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "🚀 **NodeMaven v${{ needs.pre-publish-tests.outputs.version }} is now live on PyPI!**" 